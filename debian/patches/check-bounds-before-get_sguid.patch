Description: Check bounds of index passed to get_sguid
 gcc complained about lack of bounds checking when calling get_sguid.
 This patch adds the bounds checking.
Author: Brian T. Smith <bsmith@systemfabricworks.com>
Forwarded: no
Last-Update: <2017-12-14>
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
---
--- a/hfi1/ruc.c
+++ b/hfi1/ruc.c
@@ -239,6 +239,8 @@
 		} else {
 			if (!(qp->alt_ah_attr.ah_flags & IB_AH_GRH))
 				return 1;
+			if (qp->alt_ah_attr.grh.sgid_index >= HFI1_GUIDS_PER_PORT)
+				return 1;
 			guid = get_sguid(ibp, qp->alt_ah_attr.grh.sgid_index);
 			if (!gid_ok(&packet->grh->dgid, ibp->rvp.gid_prefix,
 				    guid))
@@ -269,6 +271,8 @@
 		} else {
 			if (!(qp->remote_ah_attr.ah_flags & IB_AH_GRH))
 				return 1;
+			if (qp->remote_ah_attr.grh.sgid_index >= HFI1_GUIDS_PER_PORT)
+				return 1;
 			guid = get_sguid(ibp,
 					 qp->remote_ah_attr.grh.sgid_index);
 			if (!gid_ok(&packet->grh->dgid, ibp->rvp.gid_prefix,
--- a/hfi1/verbs.c
+++ b/hfi1/verbs.c
@@ -1660,7 +1660,7 @@
 {
 	struct hfi1_ibport *ibp = container_of(rvp, struct hfi1_ibport, rvp);
 
-	if (guid_index >= HFI1_GUIDS_PER_PORT)
+	if (guid_index < 0 || guid_index >= HFI1_GUIDS_PER_PORT)
 		return -EINVAL;
 
 	*guid = get_sguid(ibp, guid_index);
